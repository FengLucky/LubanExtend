
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace Langrisser
{
    [Config]
    public partial struct CfgVector3
    {
        public void LoadData(JSONNode buf)
        {
            { if(!buf["x"].IsNumber) { throw new SerializationException(); }  X = buf["x"]; }
            { if(!buf["y"].IsNumber) { throw new SerializationException(); }  Y = buf["y"]; }
            { if(!buf["z"].IsNumber) { throw new SerializationException(); }  Z = buf["z"]; }
        }
    
        public static CfgVector3 DeserializeCfgVector3(JSONNode buf)
        {
            var obj = new CfgVector3();
            obj.LoadData(buf);
            return obj;
        }
    
        [ConfigField]
        [OriginalFieldName("x")]
        public float X;
    
        [ConfigField]
        [OriginalFieldName("y")]
        public float Y;
    
        [ConfigField]
        [OriginalFieldName("z")]
        public float Z;
    
    
        public  void ResolveRef()
        {
        }
    
        public override string ToString()
        {
            return "{ "
            + "x:" + X + ","
            + "y:" + Y + ","
            + "z:" + Z + ","
            + "}";
        }
    }
}
